/*
plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
}
*/
//apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

group = 'com.sdk'
version = '0.2.1-SNAPSHOT'
sourceCompatibility = '1.8'

mainClassName = 'com.sdk.server.ServerApplication'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

ext {
    slf4jVersion = '1.7.7'
    leveldbVersion = '0.12'
    scastleVersion = '1.58.0.0'
    springVersion = '4.3.19.RELEASE'
    junitVersion = '4.11'
    springbootVersion = '2.2.5.RELEASE'
    guavaVersion = '28.1-jre'
    gRPCVersion = '1.25.0'
    lombokVersion = '1.18.10'
    commonsCliVersion = '1.4'
    math3Version = '3.6'
    commonsLang3Version = '3.4'
    leveldbJNIVersion = '1.18'
    jargon2Version = '1.1.1'
    bouncycastleVersion = '1.61'
    commonsCollections4Version = '4.0'
    rocksdbVersion = '6.6.4'
}


dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web:2.1.6.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-test:2.1.6.RELEASE'
    compile fileTree(dir:'lib',includes:['*jar'])
    // https://mvnrepository.com/artifact/org.iq80.leveldb/leveldb
    compile group: 'org.iq80.leveldb', name: 'leveldb', version: '0.7'
    // https://mvnrepository.com/artifact/org.iq80.leveldb/leveldb-api
    compile group: 'org.iq80.leveldb', name: 'leveldb-api', version: '0.7'
    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.62'
    implementation 'com.github.WisedomChainGroup:java-sdk:0.3.0'
    implementation 'com.github.TrustedDataFramework:java-rlp:v1.1.16'

    // https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on
    compile "org.bouncycastle:bcprov-jdk15on:1.61"
    compile "org.apache.commons:commons-collections4:4.0"
    compile "org.apache.commons:commons-lang3:3.4"
    compile "org.apache.commons:commons-math3:3.6"
    compile "commons-codec:commons-codec:1.10"
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile "commons-cli:commons-cli:1.4"
    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.47'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile "com.google.guava:guava:28.1-jre"
    compile "com.fasterxml.jackson.core:jackson-databind:2.5.1"
    // https://mvnrepository.com/artifact/com.kosprov.jargon2/jargon2-api
    compile "com.kosprov.jargon2:jargon2-api:1.1.1"
    // https://mvnrepository.com/artifact/com.kosprov.jargon2/jargon2-native-ri-backend
    compile "com.kosprov.jargon2:jargon2-native-ri-backend:1.1.1"
    // https://mvnrepository.com/artifact/net.java.dev.jna/jna
    compile group: 'net.java.dev.jna', name: 'jna', version: '4.5.2'
    // https://mvnrepository.com/artifact/com.nativelibs4java/jnaerator-runtime
    compile group: 'com.nativelibs4java', name: 'jnaerator-runtime', version: '0.12'
    // https://mvnrepository.com/artifact/com.nativelibs4java/ochafik-util
    compile group: 'com.nativelibs4java', name: 'ochafik-util', version: '0.12'
    //     https://mvnrepository.com/artifact/javax.validation/validation-api
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.0.Final'
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.6.1'



}

task copyDependencies(type: Copy) {
    from configurations.runtime
    destinationDir = file('build/libs/lib')
}


jar {
    manifest {
        attributes 'Main-Class' : mainClassName
        attributes 'Class-Path' : '. ' + configurations.compile.collect { 'lib/' + it.getName() }.join(' ')
    }
}
jar.dependsOn += copyDependencies

task fatJar(type: Jar) {
    classifier = 'all'
    manifest {
        attributes 'Main-Class' : mainClassName
        attributes 'Class-Path' : configurations.compile.collect { 'lib/' + it.getName() }.join(' ')
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

apply plugin: 'maven'


repositories {
    mavenLocal()
    mavenCentral()
}
